<html>
<head>
  <meta charset="utf-8">
  <meta name="HandheldFriendly" content="True">
  <title> Roku Development Kit </title>

  <link rel="stylesheet" type="text/css" media="screen" href="css/global.css" />
</head>
<body>
  <div id="root" style="background: #fff">
  
  
  </div>

  <!-- Keep it, so old scripts can continue to work -->
  <div style="display:none">
    <font color="red">Application Received: Identical to previous version -- not replacing.
</font>
    <font color="red"></font>
    <p><font face="Courier">0fc8c2194ec9c0f86243cac06767fa38 <br /> zip file in internal memory (270083 bytes)</font></p>
  </div>

  <script type="text/javascript" src="css/global.js"></script>
  <script type="text/javascript">
  
      // Include core components and resounce bundle (needed)
      Shell.resource.set(null, {
          endpoints: {} 
      });
      Shell.create('Roku.Event.Key');
      Shell.create('Roku.Events.Resize');
      Shell.create('Roku.Events.Scroll');  

      // Create global navigation and render it
      var nav = Shell.create('Roku.Nav')
        .trigger('Enable standalone and utility mode - hide user menu, shopping cart, and etc.')
        .trigger('Use compact footer')
        .trigger('Hide footer')
        .trigger('Render', document.getElementById('root'))
        // Create custom links
        .trigger('Remove all feature links from header')
        .trigger('Add feature link in header', {
            text: 'Installer',
            url: 'plugin_install'
        })
        .trigger('Add feature link in header', {
            text: 'Utilities',
            url: 'plugin_inspect'
        })
        
        .trigger('Add feature link in header', { text: 'Packager (no dev key)' });

      // Retrieve main content body node
      var node = nav.invoke('Get main body section mounting node');
      
      // Create page container and page header
      var container = Shell.create('Roku.Nav.Page.Standard').trigger('Render', node);
      node = container.invoke('Get main body node');
      container.invoke('Get headline node').innerHTML = 'Development Application Installer';

      node.innerHTML = '<p>Currently Installed Application:</p><p><font face="Courier">0fc8c2194ec9c0f86243cac06767fa38 <br /> zip file in internal memory (270083 bytes)</font></p>';

      // Set up form in main body content area
      form = Shell.create('Roku.Form')
        .trigger('Set form action URL', 'plugin_install')
        .trigger('Set form encryption type to multi-part')
        .trigger("Add file upload button", { 
            name: "archive",
            label: "File:" 
         })
        .trigger("Add hidden input field", {
            name: "mysubmit"
      });

      // Render some buttons
      var Delete = document.createElement('BUTTON');
      Delete.className = 'roku-button';
      Delete.innerHTML = 'Delete';
      Delete.onclick = function() {
          form.trigger('Update input field value', { name: 'mysubmit', value: 'Delete'})
          form.trigger('Force submit');   
      };
      node.appendChild(Delete);

      function appendNode(innerText, valueText, message) {
          var variable = document.createElement('BUTTON');
          variable.className = 'roku-button';
          variable.innerHTML = innerText;
          variable.onclick = function() {
                Shell.create('Roku.Message').trigger('Set message type', 'info').trigger('Set message content', message + ' Application, Please Wait...').trigger('Render', node);
                form.trigger('Update input field value', { name: 'mysubmit', value: valueText})
                form.trigger('Force submit');
          };
          node.appendChild(variable);
      }

      switch (1)
      {
        case 1:  //PACKAGE_FS_ZIP
            appendNode('Convert to cramfs', 'Convert to cramfs', 'Converting');
            appendNode('Convert to squashfs', 'Convert to squashfs', 'Converting');
        break;
        case 3:  //PACKAGE_FS_SQUASH
            appendNode('Convert to cramfs', 'Convert to cramfs', 'Converting');
            appendNode('Convert to zip', 'Convert to zip', 'Converting');
        break;
        default:
        break;
      }
      
      var hrDiv = document.createElement('div');
      hrDiv.innerHTML = '<hr />';
      node.appendChild(hrDiv);

      form.trigger('Render', node);

      // Render some buttons
      appendNode('Replace with squashfs', 'Install with squashfs', 'Replacing');
      appendNode('Replace with zip', 'Install', 'Replacing');

      var d = document.createElement('div');
      d.innerHTML = '<br />';
      node.appendChild(d);

      // Render messages (info, error, and success)
      Shell.create('Roku.Message').trigger('Set message type', 'info').trigger('Set message content', 'Application Received: Identical to previous version -- not replacing.').trigger('Render', node);
      
      

  </script>

</body>
</html>
